.editorContainer {
  display: flex;
  height: 100%;
  width: 100%;
  max-height: 100%;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  background: #fff;
  overflow: hidden;
}

.editorHeader {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 12px 16px;
  border-bottom: 1px solid #e5e7eb;
  background: #f9fafb;
  border-radius: 8px 8px 0 0;
}

.editorActions {
  display: flex;
  gap: 8px;
}

.editorContent {
  flex: 1;
}

.editorContentWrap {
  width: 100%;
  height: 100%;
  overflow: hidden;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.editorContentWrap :global(.tiptap) {
  width: 100%;
  height: 100%;
  padding: 12px;
  overflow-y: auto;
  box-sizing: border-box;
  outline: none;
  flex: 1;
}

.editorContentWrap :global(.tiptap[contenteditable="false"]) {
  background-color: #f9fafb;
  cursor: default;
  user-select: text;
}

.editorContentWrap :global(.tiptap[contenteditable="false"]:focus) {
  outline: none;
  box-shadow: none;
}

.editorContentWrap :global(.tiptap:first-child) {
  margin-top: 0;
}

.editorContentWrap :global(.tiptap blockquote) {
  border-left: 3px solid red;
  margin: 1.5rem 0;
  padding-left: 1rem;
}

.editorContentWrap :global(.tiptap :is(ul, ol)) {
  padding: 0 1rem;
  margin: 1.25rem 1rem 1.25rem 0.4rem;
}

.editorContentWrap :global(.tiptap ol li p) {
  margin: 0.25em 0;
}

.editorContentWrap :global(.tiptap hr) {
  border: none;
  border-top: 1px solid gray;
  cursor: pointer;
  margin: 1rem 0;
}


/* Image styles from original */
.resizableImageWrapper {
  position: relative;
  display: inline-block;
  margin: 5px;
  max-width: 100%;
  box-sizing: border-box;
}

.resizableImage {
  display: block;
  max-width: 100%;
  height: auto;
  border-radius: 4px;
}

/* Ensure images don't overflow */
.editorContentWrap :global(.tiptap img) {
  max-width: 100% !important;
  height: auto !important;
  display: block;
  margin: 8px auto;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Table styles from original */
.editorContentWrap :global(.tiptap table) {
  border-collapse: collapse;
  margin: 0;
  overflow: hidden;
  table-layout: fixed;
  width: 100%;
}

.editorContentWrap :global(.tiptap td) {
  border: 1px solid rgb(187, 183, 183);
  box-sizing: border-box;
  min-width: 1em;
  padding: 5px;
  position: relative;
  vertical-align: top;
}

.editorContentWrap :global(.tiptap td > *) {
  margin-bottom: 0;
}

.editorContentWrap :global(.tiptap th) {
  background-color: #8080803f;
  border: 1px solid rgb(187, 183, 183);
  box-sizing: border-box;
  min-width: 1em;
  padding: 5px;
  position: relative;
  vertical-align: top;
}

.editorContentWrap :global(.tiptap th > *) {
  margin-bottom: 0;
}

.editorContentWrap :global(.tiptap th) {
  font-weight: bold;
  text-align: left;
}

.editorContentWrap :global(.tiptap .selectedCell:after) {
  background: gray;
  opacity: 0.5;
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  position: absolute;
  z-index: 2;
}

.editorContentWrap :global(.tiptap .column-resize-handle) {
  background-color: rgb(0, 17, 255);
  bottom: -2px;
  pointer-events: none;
  position: absolute;
  right: -2px;
  top: 0;
  width: 4px;
}

.editorContentWrap :global(.tiptap .tableWrapper) {
  margin: 1.5rem 0;
  overflow-x: auto;
}

.editorContentWrap :global(.resize-cursor) {
  cursor: ew-resize;
  cursor: col-resize;
}

/* Prevent all content from overflowing */
.editorContentWrap :global(.tiptap *) {
  max-width: 100%;
  box-sizing: border-box;
}

/* Specific overrides for common elements */
.editorContentWrap :global(.tiptap pre) {
  max-width: 100%;
  overflow-x: auto;
  white-space: pre-wrap;
  word-wrap: break-word;
}

.editorContentWrap :global(.tiptap blockquote) {
  max-width: 100%;
  overflow-wrap: break-word;
}

.editorContentWrap :global(.tiptap table) {
  max-width: 100%;
  table-layout: fixed;
}

.editorContentWrap :global(.tiptap .tableWrapper) {
  max-width: 100%;
  overflow-x: auto;
}

.editorContentWrap .ProseMirror p {
  margin: 0 0 8px 0;
}

.editorContentWrap .ProseMirror p:last-child {
  margin-bottom: 0;
}

.editorContentWrap .ProseMirror img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin: 8px 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.editorContentWrap .ProseMirror h1,
.editorContentWrap .ProseMirror h2,
.editorContentWrap .ProseMirror h3,
.editorContentWrap .ProseMirror h4,
.editorContentWrap .ProseMirror h5,
.editorContentWrap .ProseMirror h6 {
  margin: 16px 0 8px 0;
  font-weight: 600;
  color: #111827;
}

.editorContentWrap .ProseMirror h1:first-child,
.editorContentWrap .ProseMirror h2:first-child,
.editorContentWrap .ProseMirror h3:first-child,
.editorContentWrap .ProseMirror h4:first-child,
.editorContentWrap .ProseMirror h5:first-child,
.editorContentWrap .ProseMirror h6:first-child {
  margin-top: 0;
}

.editorContentWrap .ProseMirror ul,
.editorContentWrap .ProseMirror ol {
  margin: 8px 0;
  padding-left: 20px;
}

.editorContentWrap .ProseMirror li {
  margin: 4px 0;
}

.editorContentWrap .ProseMirror blockquote {
  margin: 16px 0;
  padding: 12px 16px;
  border-left: 4px solid #10b981;
  background: #f0fdf4;
  border-radius: 0 4px 4px 0;
}

.editorContentWrap .ProseMirror code {
  background: #f3f4f6;
  padding: 2px 6px;
  border-radius: 4px;
  font-family: 'Courier New', monospace;
  font-size: 13px;
}

.editorContentWrap .ProseMirror pre {
  background: #f3f4f6;
  padding: 12px;
  border-radius: 6px;
  overflow-x: auto;
  margin: 12px 0;
}

.editorContentWrap .ProseMirror pre code {
  background: none;
  padding: 0;
}

.editorContentWrap .ProseMirror strong {
  font-weight: 600;
}

.editorContentWrap .ProseMirror em {
  font-style: italic;
}

.editorContentWrap .ProseMirror a {
  color: #10b981;
  text-decoration: underline;
}

.editorContentWrap .ProseMirror a:hover {
  color: #059669;
}

.editorFooter {
  padding: 12px 20px;
  border-top: 1px solid #e5e7eb;
  background: #f9fafb;
  border-radius: 0 0 8px 8px;
}

.editorHint {
  color: #6b7280;
  font-size: 12px;
  display: flex;
  align-items: center;
  gap: 4px;
}

/* Responsive */
@media (max-width: 768px) {
  .editorHeader {
    flex-direction: column;
    gap: 12px;
    align-items: stretch;
  }

  .editorActions {
    justify-content: flex-end;
  }

  .editorContent {
    flex: 1;
    min-height: 0;
    display: flex;
    flex-direction: column;
  }
}