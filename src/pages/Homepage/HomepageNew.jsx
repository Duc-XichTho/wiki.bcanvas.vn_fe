import React, { useEffect, useState } from 'react';
import { Button } from 'antd';
import { useNavigate } from 'react-router-dom';
import styles from './HomepageNew.module.css';

const HomepageNew = () => {
  const navigate = useNavigate();
  const [headerScrolled, setHeaderScrolled] = useState(false);
  const [activeFaq, setActiveFaq] = useState(null);

  // Header scroll effect
  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 50) {
        setHeaderScrolled(true);
      } else {
        setHeaderScrolled(false);
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // FAQ toggle functionality
  const handleFaqToggle = (index) => {
    setActiveFaq(activeFaq === index ? null : index);
  };

  // Handle login
  const handleLogin = () => {
    window.open(`${import.meta.env.VITE_API_URL}/login`, "_self");
  };

  const faqData = [
    {
      question: "B-Canvas ph√π h·ª£p v·ªõi doanh nghi·ªáp n√†o?",
      answer: "B-Canvas l√† l·ª±a ch·ªçn l√Ω t∆∞·ªüng cho c√°c doanh nghi·ªáp SME c√≥ quy m√¥ doanh thu t·ª´ 15-300 t·ª∑ VNƒê/nƒÉm, c√≥ nhu c·∫ßu x√¢y d·ª±ng ho·∫∑c ph√°t tri·ªÉn m·ªôt h·ªá th·ªëng b√°o c√°o, ph√¢n t√≠ch v√† Dashboard BI t·∫≠p trung."
    },
    {
      question: "Th·ªùi gian tri·ªÉn khai B-Canvas l√† bao l√¢u?",
      answer: "Th·ªùi gian tri·ªÉn khai t·ª´ 2-4 tu·∫ßn t√πy thu·ªôc v√†o ƒë·ªô ph·ª©c t·∫°p c·ªßa h·ªá th·ªëng d·ªØ li·ªáu hi·ªán t·∫°i. Ch√∫ng t√¥i c√≥ ƒë·ªôi ng≈© chuy√™n gia h·ªó tr·ª£ tri·ªÉn khai v√† ƒë√†o t·∫°o ng∆∞·ªùi d√πng."
    },
    {
      question: "B-Canvas c√≥ kh√≥ s·ª≠ d·ª•ng kh√¥ng?",
      answer: "Kh√¥ng, B-Canvas ƒë∆∞·ª£c thi·∫øt k·∫ø v·ªõi giao di·ªán tinh g·ªçn, tr·ª±c quan v√† d·ªÖ s·ª≠ d·ª•ng ngay c·∫£ v·ªõi ng∆∞·ªùi d√πng kh√¥ng chuy√™n v·ªÅ k·ªπ thu·∫≠t. H·ªá th·ªëng t√≠ch h·ª£p AI ƒë·ªÉ h·ªó tr·ª£ ng∆∞·ªùi d√πng."
    },
    {
      question: "Chi ph√≠ s·ª≠ d·ª•ng B-Canvas nh∆∞ th·∫ø n√†o?",
      answer: "B-Canvas cung c·∫•p nh·ªØng t√≠nh nƒÉng m·∫°nh m·∫Ω v·ªõi m·ª©c chi ph√≠ h·ª£p l√Ω nh·∫•t cho SME, th·∫•p h∆°n ƒë√°ng k·ªÉ so v·ªõi c√°c gi·∫£i ph√°p qu·ªëc t·∫ø. Ch√∫ng t√¥i c√≥ c√°c g√≥i d·ªãch v·ª• linh ho·∫°t ph√π h·ª£p v·ªõi t·ª´ng quy m√¥."
    },
    {
      question: "B-Canvas c√≥ t√≠ch h·ª£p ƒë∆∞·ª£c v·ªõi h·ªá th·ªëng hi·ªán t·∫°i kh√¥ng?",
      answer: "C√≥, B-Canvas c√≥ kh·∫£ nƒÉng t√≠ch h·ª£p cao v·ªõi c√°c h·ªá th·ªëng hi·ªán t·∫°i th√¥ng qua API, k·∫øt n·ªëi tr·ª±c ti·∫øp v·ªõi Google Sheets, c√°c Database ph·ªï bi·∫øn v√† h·ªó tr·ª£ upload file Excel."
    },
    {
      question: "B-Canvas c√≥ h·ªó tr·ª£ ƒë√†o t·∫°o v√† b·∫£o tr√¨ kh√¥ng?",
      answer: "C√≥, ch√∫ng t√¥i cung c·∫•p ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o to√†n di·ªán cho ng∆∞·ªùi d√πng. ƒê·ªôi ng≈© h·ªó tr·ª£ k·ªπ thu·∫≠t 24/7 s·∫µn s√†ng gi·∫£i quy·∫øt m·ªçi v·∫•n ƒë·ªÅ v√† d·ªãch v·ª• b·∫£o tr√¨ ƒë·ªãnh k·ª≥."
    }
  ];

  const features = [
    {
      icon: "/feature (1).svg",
      title: "AI chuy√™n s√¢u",
      description: "C√¥ng ngh·ªá AI t√πy ch·ªânh, ƒë∆°n gi·∫£n h√≥a cho SME Vi·ªát Nam"
    },
    {
      icon: "/feature (2).svg", 
      title: "Real-time",
      description: "Ph√¢n t√≠ch d·ªØ li·ªáu th·ªùi gian th·ª±c"
    },
    {
      icon: "/feature.svg",
      title: "Chi ph√≠ t·ªëi ∆∞u",
      description: "Gi√° c·∫£ h·ª£p l√Ω cho doanh nghi·ªáp SME"
    }
  ];

  const painPoints = [
    {
      icon: "/painPoints (4).svg",
      title: "D·ªØ li·ªáu ph√¢n m·∫£nh",
      description: "D·ªØ li·ªáu nhi·ªÅu nh∆∞ng ph√¢n m·∫£nh ·ªü c√°c ngu·ªìn kh√°c nhau, kh√¥ng k·∫øt n·ªëi. Thi·∫øu h·ªá th·ªëng t·∫≠p trung ƒë·ªÉ qu·∫£n l√Ω ƒë·ªìng b·ªô."
    },
    {
      icon: "/painPoints (6).svg",
      title: "B√°o c√°o ch·∫≠m tr·ªÖ",
      description: "D·ªØ li·ªáu b√°o c√°o ch·∫≠m, thi·∫øu ho·∫∑c kh√¥ng ƒë·ªß, ·∫£nh h∆∞·ªüng nghi√™m tr·ªçng ƒë·∫øn vi·ªác ra quy·∫øt ƒë·ªãnh k·ªãp th·ªùi."
    },
    {
      icon: "/painPoints (1).svg",
      title: "H·∫°n ch·∫ø ng√¢n s√°ch",
      description: "Kh√¥ng c√≥ ngu·ªìn l·ª±c l·ªõn ƒë·ªÉ ƒë·∫ßu t∆∞ cho c√°c h·ªá th·ªëng c·ªìng k·ªÅnh, ph·ª©c t·∫°p v·ªõi chi ph√≠ cao."
    },
    {
      icon: "/painPoints (3).svg",
      title: "Thi·∫øu chuy√™n gia",
      description: "Kh√¥ng c√≥ ƒë·ªôi ng≈© IT chuy√™n s√¢u ƒë·ªÉ v·∫≠n h√†nh v√† b·∫£o tr√¨ c√°c h·ªá th·ªëng ph·ª©c t·∫°p."
    },
    {
      icon: "/painPoints (5).svg",
      title: "Kh√≥ ƒëo l∆∞·ªùng hi·ªáu qu·∫£",
      description: "Thi·∫øu c√°c ch·ªâ s·ªë ƒëo l∆∞·ªùng chu·∫©n h√≥a v√† h·ªá th·ªëng theo d√µi hi·ªáu qu·∫£ kinh doanh."
    },
    {
      icon: "/painPoints (2).svg",
      title: "Thi·∫øu insight h√†nh ƒë·ªông",
      description: "D·ªØ li·ªáu c√≥ nh∆∞ng kh√¥ng bi·∫øt c√°ch ph√¢n t√≠ch ƒë·ªÉ t·∫°o ra insight c√≥ th·ªÉ h√†nh ƒë·ªông ƒë∆∞·ª£c."
    }
  ];

  const advantages = [
    {
      icon: "‚ö°",
      title: "Nhanh",
      description: "Hi·ªáu qu·∫£ nhanh ch√≥ng, d·ªÖ tri·ªÉn khai, d·ªÖ l√†m quen"
    },
    {
      icon: "üß†",
      title: "Th√¥ng minh", 
      description: "·ª®ng d·ª•ng AI v√† t·ª± ƒë·ªông h√≥a s√¢u r·ªông, chuy√™n bi·ªát"
    },
    {
      icon: "üõ°Ô∏è",
      title: "Ph√π h·ª£p & L√†m ch·ªß",
      description: "D·ªØ li·ªáu lu√¥n tin c·∫≠y cao v√† do kh√°ch h√†ng l√†m ch·ªß"
    }
  ];

  const tools = [
    {
      title: "Data Rubik",
      description: "T√≠ch h·ª£p & l√†m s·∫°ch d·ªØ li·ªáu t·ª´ nhi·ªÅu ngu·ªìn kh√°c nhau m·ªôt c√°ch t·ª± ƒë·ªông v√† th√¥ng minh",
      features: [
        "K·∫øt n·ªëi real-time v·ªõi Google Sheets, Database qua API",
        "L√†m s·∫°ch d·ªØ li·ªáu tr√πng l·∫∑p, thi·∫øu s√≥t t·ª± ƒë·ªông",
        "Logic b·∫±ng AI ng√¥n ng·ªØ t·ª± nhi√™n"
      ]
    },
    {
      title: "PTTK - Ph√¢n t√≠ch & Th·ªëng k√™",
      description: "C√¥ng c·ª• ph√¢n t√≠ch kinh doanh th√¥ng minh v·ªõi AI ƒë·ªÉ t·∫°o ra c√°c b√°o c√°o chuy√™n s√¢u",
      features: [
        "T·∫°o Metric & Indicator kinh doanh t·ª± ƒë·ªông",
        "B√°o c√°o th√¥ng minh v·ªõi AI ph√¢n t√≠ch",
        "Dashboard t∆∞∆°ng t√°c real-time"
      ]
    },
    {
      title: "KTQT - Ph√¢n t√≠ch x√¢y d·ª±ng b√°o c√°o qu·∫£n tr·ªã t√†i ch√≠nh ƒëa chi·ªÅu",
      description: "C√¥ng c·ª• chuy√™n s√¢u cho ph√¢n t√≠ch t√†i ch√≠nh n√¢ng cao v·ªõi Activity-Based Costing",
      features: [
        "Activity-Based Costing t·ª± ƒë·ªông",
        "Ph√¢n b·ªï chi ph√≠ linh ho·∫°t theo nhi·ªÅu chi·ªÅu",
        "Tr·ª£ l√Ω AI ph√¢n b·ªï chi ph√≠ th√¥ng minh"
      ]
    },
    {
      title: "KPI Map - H·ªá th·ªëng ch·ªâ s·ªë",
      description: "Tr·ª±c quan h√≥a h·ªá th·ªëng ch·ªâ s·ªë kinh doanh thi·∫øt y·∫øu, li√™n k·∫øt v·ªõi nƒÉng l·ª±c c·∫°nh tranh",
      features: [
        "Listing ch·ªâ s·ªë theo model ng√†nh h√†ng c·ª• th·ªÉ",
        "ƒê·ªãnh nghƒ©a c√°c ƒëo l∆∞·ªùng c·∫ßn thi·∫øt",
        "Mapping m·ªëi quan h·ªá gi·ªØa KPI v√† d·ªØ li·ªáu ngu·ªìn"
      ]
    },
    {
      title: "Mini App & Automation Builder",
      description: "X√¢y d·ª±ng c√°c ·ª©ng d·ª•ng mini v√† t·ª± ƒë·ªông h√≥a quy tr√¨nh kinh doanh",
      features: [
        "T·∫°o mini app kh√¥ng c·∫ßn code",
        "Automation workflow th√¥ng minh",
        "T√≠ch h·ª£p v·ªõi c√°c h·ªá th·ªëng hi·ªán c√≥"
      ]
    }
  ];

  const showcaseItems = [
    { icon: "üìä", title: "Dashboard Analytics" },
    { icon: "üéØ", title: "KPI Dashboard" },
    { icon: "üìà", title: "Financial Analysis" },
    { icon: "üóÑÔ∏è", title: "Data Integration" },
    { icon: "‚öôÔ∏è", title: "Automation Builder" }
  ];

  const trustPills = [
    "Tri·ªÉn khai nhanh", "B·∫£o m·∫≠t & Tin c·∫≠y", "T√≠ch h·ª£p ƒëa n·ªÅn t·∫£ng",
    "AI Insights", "H·ªó tr·ª£ 24/7", "Ti·∫øt ki·ªám chi ph√≠",
    "T√πy bi·∫øn linh ho·∫°t", "Quy tr√¨nh chu·∫©n", "Kh√°ch h√†ng h√†i l√≤ng", "M·ªü r·ªông d·ªÖ d√†ng"
  ];

  return (
    <div className={styles.homepage}>
      {/* Header */}
      <header className={`${styles.header} ${headerScrolled ? styles.scrolled : ''}`} id="header">
        <div className={styles.navContainer}>
          <div className={styles.logo}>
            <img src={'/logo_bcanvas_05_10.png'} alt="logo" width={20} height={20} />
            B-Canvas
          </div>
          <div className={styles.navButtons}>
            <Button 
              type="default" 
              className={styles.btnOutline}
              onClick={() => navigate('/login')}
            >
              ƒêƒÉng k√Ω
            </Button>
            <Button 
              type="primary" 
              className={styles.btnPrimary}
              onClick={handleLogin}
            >
              ƒêƒÉng nh·∫≠p
            </Button>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className={styles.hero}>
        <div className={styles.container}>
          <div className={styles.heroContent}>
            <h1>Chuy·ªÉn ƒë·ªïi s·ªë v·ªõi AI & Ph√¢n t√≠ch D·ªØ li·ªáu th√¥ng minh</h1>
            <p className={styles.heroSubtitle}>
              Gi·∫£i ph√°p nhanh-m·∫°nh-g·ªçn t√≠ch h·ª£p AI ti√™n phong v√† Automation ƒë·ªÉ c√°ch m·∫°ng h√≥a vi·ªác qu·∫£n tr·ªã d·ªØ li·ªáu v√† ph√¢n t√≠ch kinh doanh, gi√∫p doanh nghi·ªáp SME Vi·ªát Nam ra quy·∫øt ƒë·ªãnh nhanh v√† ch√≠nh x√°c.
            </p>
            <div className={styles.heroCta}>
              <Button 
                type="primary" 
                className={styles.btnHero}
                onClick={() => navigate('/dashboard')}
              >
                Kh√°m ph√° ngay
              </Button>
              <Button 
                type="default" 
                className={styles.btnHero}
                onClick={() => navigate('/dashboard')}
              >
                Xem demo
              </Button>
            </div>
          </div>
          
          <div className={styles.featuresPreview}>
            {features.map((feature, index) => (
              <div key={index} className={styles.featureItem}>
                <div className={styles.featureIcon}>
                  <img src={feature.icon} alt={feature.title} />
                </div>
                <div className={styles.featureContent}>
                  <h3>{feature.title}</h3>
                  <p>{feature.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Showcase Section */}
      <section className={`${styles.section} ${styles.showcase}`}>
        <div className={styles.container}>
          <div className={styles.showcaseMarquee}>
            <div className={styles.marqueeTrack}>
              {[...showcaseItems, ...showcaseItems].map((item, index) => (
                <div key={index} className={styles.showcaseItem}>
                  <div className={styles.showcaseImage}>
                    <div className={styles.imagePlaceholder}>
                      <span className={styles.placeholderIcon}>{item.icon}</span>
                      <span>{item.title}</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Pain Points Section */}
      <section className={`${styles.section} ${styles.painPoints}`}>
        <div className={styles.container}>
          <h2 className={styles.sectionTitle}>Th√°ch th·ª©c c·ªßa doanh nghi·ªáp SME trong qu·∫£n tr·ªã d·ªØ li·ªáu</h2>
          <p className={styles.sectionSubtitle}>
            C√°c doanh nghi·ªáp v·ª´a v√† nh·ªè th∆∞·ªùng g·∫∑p ph·∫£i nh·ªØng kh√≥ khƒÉn nghi√™m tr·ªçng trong vi·ªác khai th√°c v√† ph√¢n t√≠ch d·ªØ li·ªáu hi·ªáu qu·∫£
          </p>
          <div className={styles.painGrid}>
            {painPoints.map((point, index) => (
              <div key={index} className={styles.painCard}>
                <div className={styles.painIcon}>
                  <img src={point.icon} alt={point.title} />
                </div>
                <h3>{point.title}</h3>
                <p>{point.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Solutions Section */}
      <section className={`${styles.section} ${styles.solutions}`}>
        <div className={styles.container}>
          <h2 className={styles.sectionTitle}>Gi·∫£i ph√°p ƒë·ªôt ph√° t·ª´ B-Canvas</h2>
          <p className={styles.sectionSubtitle}>
            B·ªô c√¥ng c·ª• m·∫°nh m·∫Ω ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫∑c bi·ªát cho doanh nghi·ªáp SME Vi·ªát Nam v·ªõi 5 Module/ App c·ªët l√µi
          </p>
          
          {/* Core Advantages */}
          <div className={styles.advantages}>
            <h3 className={styles.advantagesTitle}>3 L·ª£i th·∫ø c·ªët l√µi</h3>
            <div className={styles.advantagesTimeline}>
              {advantages.map((advantage, index) => (
                <div key={index} className={styles.advantageItem}>
                  <div className={styles.advantageDot}></div>
                  <div className={styles.advantageContent}>
                    <h4>
                      <span className={styles.advantageIcon}>{advantage.icon}</span>
                      {advantage.title}
                    </h4>
                    <p>{advantage.description}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* B-Canvas Tools */}
          <div className={styles.toolsSection}>
            <h3 className={styles.toolsTitle}>BCanvas Tool Studio</h3>
            <div className={styles.toolsGrid}>
              {tools.map((tool, index) => (
                <div key={index} className={styles.toolCard}>
                  <h4>{tool.title}</h4>
                  <p>{tool.description}</p>
                  <ul className={styles.toolFeatures}>
                    {tool.features.map((feature, featureIndex) => (
                      <li key={featureIndex}>{feature}</li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Trust Section */}
      <section className={`${styles.section} ${styles.trust}`}>
        <div className={styles.container}>
          <h2 className={styles.sectionTitle}>ƒê∆∞·ª£c tin t∆∞·ªüng b·ªüi</h2>
          <p className={styles.sectionSubtitle}>
            Nh·ªØng con s·ªë ·∫•n t∆∞·ª£ng ch·ª©ng minh hi·ªáu qu·∫£ c·ªßa B-Canvas
          </p>
          
          <div className={styles.trustStats}>
            <div className={styles.trustItem}>
              <div className={styles.trustNumber}>98%</div>
              <p className={styles.trustText}>M·ª©c ƒë·ªô h√†i l√≤ng kh√°ch h√†ng</p>
            </div>
            <div className={styles.trustItem}>
              <div className={styles.trustNumber}>90%</div>
              <p className={styles.trustText}>Ti·∫øt ki·ªám th·ªùi gian x·ª≠ l√Ω - ra quy·∫øt ƒë·ªãnh</p>
            </div>
            <div className={styles.trustItem}>
              <div className={styles.trustNumber}>24/7</div>
              <p className={styles.trustText}>H·ªó tr·ª£ chuy√™n nghi·ªáp</p>
            </div>
          </div>
          
          <div className={styles.trustMarquee}>
            <div className={styles.trustTrack}>
              {[...trustPills, ...trustPills].map((pill, index) => (
                <span key={index} className={styles.trustPill}>{pill}</span>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className={`${styles.section} ${styles.faq}`}>
        <div className={styles.container}>
          <h2 className={styles.sectionTitle}>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
          <p className={styles.sectionSubtitle}>
            Nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn v·ªÅ B-Canvas v√† gi·∫£i ƒë√°p chi ti·∫øt
          </p>
          
          <div className={styles.faqContainer}>
            {faqData.map((faq, index) => (
              <div key={index} className={`${styles.faqItem} ${activeFaq === index ? styles.active : ''}`}>
                <button 
                  className={styles.faqQuestion}
                  onClick={() => handleFaqToggle(index)}
                >
                  {faq.question}
                  <span className={styles.faqIcon}>‚ñº</span>
                </button>
                <div className={styles.faqAnswer}>
                  {faq.answer}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Footer CTA */}
      <section className={styles.footerCta}>
        <div className={styles.container}>
          <h2>S·∫µn s√†ng chuy·ªÉn ƒë·ªïi s·ªë v·ªõi B-Canvas?</h2>
          <p>
            B·∫Øt ƒë·∫ßu h√†nh tr√¨nh chuy·ªÉn ƒë·ªïi s·ªë th√¥ng minh cho doanh nghi·ªáp c·ªßa b·∫°n ngay h√¥m nay
          </p>
          <div className={styles.ctaButtons}>
            <Button 
              type="primary" 
              className={styles.btnCta}
              onClick={handleLogin}
            >
              ƒêƒÉng k√Ω d√πng th·ª≠ mi·ªÖn ph√≠
            </Button>
            <Button 
              type="default" 
              className={styles.btnCta}
              onClick={handleLogin}
            >
              Li√™n h·ªá t∆∞ v·∫•n
            </Button>
          </div>
        </div>
      </section>
    </div>
  );
};

export default HomepageNew;
