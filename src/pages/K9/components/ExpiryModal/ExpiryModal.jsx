import React, { useEffect, useContext, useState } from 'react';
import { Modal, Button, Typography, Space, Alert } from 'antd';
import {
	ExclamationCircleOutlined,
	ClockCircleOutlined,
	WarningOutlined,
	CalendarOutlined,
	UserOutlined,
	LockOutlined,
	InfoCircleOutlined,
	LogoutOutlined,
} from '@ant-design/icons';
import styles from './ExpiryModal.module.css';
import { logout } from '../../../../apis/userService';
import { MyContext } from '../../../../MyContext.jsx';

const { Title, Text, Paragraph } = Typography;

const ExpiryModal = ({}) => {
	const { currentUser } = useContext(MyContext);
	const [expiryModalVisible, setExpiryModalVisible] = useState(false);
	const [expiryModalType, setExpiryModalType] = useState('no_setup');
	const [userTimeInfo, setUserTimeInfo] = useState(null);
	const checkUserTimeAccess = () => {
		if (!currentUser) return { canAccess: false, type: 'no_setup', userInfo: null };

		// Admin c√≥ quy·ªÅn truy c·∫≠p kh√¥ng gi·ªõi h·∫°n
		if (currentUser.isAdmin) {
			return { canAccess: true, type: null, userInfo: null };
		}

		try {
			if (currentUser.info) {
				const userTimeInfo = typeof currentUser.info === 'string' ? JSON.parse(currentUser.info) : currentUser.info;
				// Ki·ªÉm tra xem user ƒë√£ ƒë∆∞·ª£c setup th·ªùi gian ch∆∞a
				if (!userTimeInfo.startDate || !userTimeInfo.durationDays || !userTimeInfo.expiryDate) {
					return {
						canAccess: false,
						type: 'no_setup',
						userInfo: userTimeInfo,
					};
				}

				// Ki·ªÉm tra xem ƒë√£ ƒë·∫øn ng√†y b·∫Øt ƒë·∫ßu ch∆∞a
				const now = new Date();
				const startDate = new Date(userTimeInfo.startDate);
				const expiryDate = new Date(userTimeInfo.expiryDate);

				// N·∫øu ch∆∞a ƒë·∫øn ng√†y b·∫Øt ƒë·∫ßu
				if (now < startDate) {
					return {
						canAccess: false,
						type: 'not_started',
						userInfo: userTimeInfo,
					};
				}

				// N·∫øu ƒë√£ h·∫øt h·∫°n
				if (now > expiryDate) {
					return {
						canAccess: false,
						type: 'expired',
						userInfo: userTimeInfo,
					};
				}

				// C√≥ th·ªÉ truy c·∫≠p
				return { canAccess: true, type: null, userInfo: userTimeInfo };
			}
		} catch (error) {
			console.warn('Error checking user time access:', error);
		}

		// M·∫∑c ƒë·ªãnh kh√¥ng c√≥ quy·ªÅn truy c·∫≠p n·∫øu kh√¥ng c√≥ th√¥ng tin
		return { canAccess: false, type: 'no_setup', userInfo: null };
	};


	useEffect(() => {
		if (currentUser) {
			const accessCheck = checkUserTimeAccess();

			if (!accessCheck.canAccess) {
				setExpiryModalType(accessCheck.type);
				setUserTimeInfo(accessCheck.userInfo);
				setExpiryModalVisible(true);
			} else {
				setExpiryModalVisible(false);
			}
		}
	}, [currentUser]);

	// Ch·∫∑n F12 v√† c√°c ph√≠m t·∫Øt kh√°c
	useEffect(() => {
		if (expiryModalVisible) {
			const handleKeyDown = (e) => {
				// Ch·∫∑n F12
				if (e.keyCode === 123) {
					e.preventDefault();
					return false;
				}

				// Ch·∫∑n Ctrl+Shift+I (Developer Tools)
				if (e.ctrlKey && e.shiftKey && e.keyCode === 73) {
					e.preventDefault();
					return false;
				}

				// Ch·∫∑n Ctrl+Shift+J (Console)
				if (e.ctrlKey && e.shiftKey && e.keyCode === 74) {
					e.preventDefault();
					return false;
				}

				// Ch·∫∑n Ctrl+U (View Source)
				if (e.ctrlKey && e.keyCode === 85) {
					e.preventDefault();
					return false;
				}

				// Ch·∫∑n Ctrl+Shift+C (Inspect Element)
				if (e.ctrlKey && e.shiftKey && e.keyCode === 67) {
					e.preventDefault();
					return false;
				}

				// Ch·∫∑n Escape key
				if (e.keyCode === 27) {
					e.preventDefault();
					return false;
				}
			};

			const handleContextMenu = (e) => {
				e.preventDefault();
				return false;
			};

			document.addEventListener('keydown', handleKeyDown);
			document.addEventListener('contextmenu', handleContextMenu);

			// Disable right click
			document.addEventListener('selectstart', (e) => e.preventDefault());
			document.addEventListener('dragstart', (e) => e.preventDefault());

			return () => {
				document.removeEventListener('keydown', handleKeyDown);
				document.removeEventListener('contextmenu', handleContextMenu);
			};
		};
	}, [expiryModalVisible]);

	const getModalContent = () => {
		if (expiryModalType === 'no_setup') {
			return {
				icon: <UserOutlined className={styles.iconWarning} />,
				title: 'T√†i kho·∫£n ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p th·ªùi gian s·ª≠ d·ª•ng',
				subtitle: 'Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c c·∫•p quy·ªÅn truy c·∫≠p',
				description: 'T√†i kho·∫£n c·ªßa b·∫°n hi·ªán ch∆∞a c√≥ th√¥ng tin v·ªÅ th·ªùi gian s·ª≠ d·ª•ng. ƒê·ªÉ ti·∫øp t·ª•c s·ª≠ d·ª•ng h·ªá th·ªëng Visao, b·∫°n c·∫ßn ƒë∆∞·ª£c qu·∫£n tr·ªã vi√™n thi·∫øt l·∫≠p th·ªùi h·∫°n s·ª≠ d·ª•ng.',
				alertType: 'warning',
				alertMessage: 'T√†i kho·∫£n ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh th·ªùi gian s·ª≠ d·ª•ng',
				color: '#faad14',
			};
		} else if (expiryModalType === 'expired') {
			return {
				icon: <ClockCircleOutlined className={styles.iconExpired} />,
				title: 'T√†i kho·∫£n ƒë√£ h·∫øt h·∫°n s·ª≠ d·ª•ng',
				subtitle: 'Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ gia h·∫°n t√†i kho·∫£n',
				description: `T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ h·∫øt h·∫°n v√†o ng√†y ${userTimeInfo?.expiryDate ? new Date(userTimeInfo.expiryDate).toLocaleDateString('vi-VN') : 'N/A'}. ƒê·ªÉ ti·∫øp t·ª•c s·ª≠ d·ª•ng h·ªá th·ªëng Visao, b·∫°n c·∫ßn ƒë∆∞·ª£c qu·∫£n tr·ªã vi√™n gia h·∫°n t√†i kho·∫£n.`,
				alertType: 'error',
				alertMessage: 'T√†i kho·∫£n ƒë√£ h·∫øt h·∫°n s·ª≠ d·ª•ng',
				color: '#ff4d4f',
			};
		} else if (expiryModalType === 'not_started') {
			const startDate = userTimeInfo?.startDate ? new Date(userTimeInfo.startDate) : null;
			const now = new Date();
			const daysUntilStart = startDate ? Math.ceil((startDate - now) / (1000 * 60 * 60 * 24)) : 0;

			return {
				icon: <CalendarOutlined className={styles.iconInfo} />,
				title: 'T√†i kho·∫£n ch∆∞a ƒë·∫øn th·ªùi gian s·ª≠ d·ª•ng',
				subtitle: 'Vui l√≤ng ƒë·ª£i ƒë·∫øn ng√†y b·∫Øt ƒë·∫ßu ƒë·ªÉ s·ª≠ d·ª•ng h·ªá th·ªëng',
				description: `T√†i kho·∫£n c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c k√≠ch ho·∫°t v√†o ng√†y ${startDate ? startDate.toLocaleDateString('vi-VN') : 'N/A'}. C√≤n ${daysUntilStart} ng√†y n·ªØa b·∫°n c√≥ th·ªÉ b·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng h·ªá th·ªëng Visao.`,
				alertType: 'info',
				alertMessage: `T√†i kho·∫£n s·∫Ω ƒë∆∞·ª£c k√≠ch ho·∫°t sau ${daysUntilStart} ng√†y`,
				color: '#1890ff',
			};
		}

		return {
			icon: <LockOutlined className={styles.iconLocked} />,
			title: 'Truy c·∫≠p b·ªã h·∫°n ch·∫ø',
			subtitle: 'Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n',
			description: 'T√†i kho·∫£n c·ªßa b·∫°n hi·ªán kh√¥ng th·ªÉ truy c·∫≠p h·ªá th·ªëng. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.',
			alertType: 'error',
			alertMessage: 'Truy c·∫≠p b·ªã h·∫°n ch·∫ø',
			color: '#ff4d4f',
		};
	};

	const content = getModalContent();

	const handleLogout = async () => {
		await logout();
		window.location.href = '/';
	};

	return (
		<Modal
			open={expiryModalVisible}
			footer={null}
			closable={false}
			maskClosable={false}
			keyboard={false}
			width={600}
			centered
			className={styles.expiryModal}
			maskStyle={{
				backgroundColor: 'rgba(0, 0, 0, 0.85)',
				backdropFilter: 'blur(8px)',
			}}
		>
			<div className={styles.modalContent}>
				{/* Header v·ªõi icon */}
				<div className={styles.modalHeader}>
					<div className={styles.iconContainer} style={{ backgroundColor: `${content.color}15` }}>
						{content.icon}
					</div>
					<Title level={3} className={styles.modalTitle}>
						{content.title}
					</Title>
				</div>

				{/* Alert */}
				<Alert
					message={content.alertMessage}
					type={content.alertType}
					showIcon
					className={styles.alert}
					icon={
						content.alertType === 'warning' ? <WarningOutlined /> :
							content.alertType === 'error' ? <ExclamationCircleOutlined /> :
								content.alertType === 'info' ? <InfoCircleOutlined /> :
									<ExclamationCircleOutlined />
					}
				/>

				{/* Content */}
				<div className={styles.modalBody}>
					<Paragraph className={styles.description}>
						{content.description}
					</Paragraph>

					{/* Th√¥ng tin t√†i kho·∫£n n·∫øu c√≥ */}
					{userTimeInfo && (
						<div className={styles.userInfo}>
							<div className={styles.infoItem}>
								<CalendarOutlined className={styles.infoIcon} />
								<div className={styles.infoContent}>
									<Text strong>Ng√†y b·∫Øt ƒë·∫ßu:</Text>
									<Text>{userTimeInfo.startDate ? new Date(userTimeInfo.startDate).toLocaleDateString('vi-VN') : 'Ch∆∞a thi·∫øt l·∫≠p'}</Text>
								</div>
							</div>

							{userTimeInfo.expiryDate && (
								<div className={styles.infoItem}>
									<ClockCircleOutlined className={styles.infoIcon} />
									<div className={styles.infoContent}>
										<Text strong>Ng√†y h·∫øt h·∫°n:</Text>
										<Text>{new Date(userTimeInfo.expiryDate).toLocaleDateString('vi-VN')}</Text>
									</div>
								</div>
							)}

							{userTimeInfo.durationDays && (
								<div className={styles.infoItem}>
									<UserOutlined className={styles.infoIcon} />
									<div className={styles.infoContent}>
										<Text strong>Th·ªùi h·∫°n:</Text>
										<Text>{userTimeInfo.durationDays} ng√†y</Text>
									</div>
								</div>
							)}
						</div>
					)}

					{/* H∆∞·ªõng d·∫´n */}
					<div className={styles.instructions}>
						<Title level={5} className={styles.instructionsTitle}>
							üìû Li√™n h·ªá h·ªó tr·ª£
						</Title>
						<Paragraph className={styles.instructionsText}>
							ƒê·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ v√† c·∫•p quy·ªÅn truy c·∫≠p, vui l√≤ng li√™n h·ªá:
						</Paragraph>
						<ul className={styles.contactList}>
							<li>üìß Email: support@visao.com</li>
							<li>üì± Hotline: 1900-xxxx</li>
							<li>üí¨ Zalo: Visao Support</li>
						</ul>
					</div>
				</div>

				{/* Footer */}
				<div className={styles.modalFooter}>
					<div className={styles.footerActions}>
						<Button
							type='default'
							icon={<LogoutOutlined />}
							onClick={handleLogout}
							className={styles.logoutButton}
						>
							ƒêƒÉng xu·∫•t
						</Button>
					</div>
					<div className={styles.footerNote}>
						<LockOutlined /> H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c b·∫£o v·ªá - Kh√¥ng th·ªÉ ƒë√≥ng th√¥ng b√°o n√†y
					</div>
				</div>
			</div>
		</Modal>
	);
};

export default ExpiryModal; 